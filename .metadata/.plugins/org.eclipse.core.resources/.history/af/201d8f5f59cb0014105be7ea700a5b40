package br.com.eventosbook.rn;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import br.com.eventosbook.constante.Constantes;
import br.com.eventosbook.modelo.Usuario;
import br.com.eventosbook.util.BibliotecaFuncao;

public class RnRecuperarContaUsuario {
	
private static RnRecuperarContaUsuario aRnRecuperarContaUsuario = new RnRecuperarContaUsuario();
	
	public static RnRecuperarContaUsuario getInstance(){
		if(RnRecuperarContaUsuario.aRnRecuperarContaUsuario == null){
			RnRecuperarContaUsuario.aRnRecuperarContaUsuario = new RnRecuperarContaUsuario();
		}
		
		return RnRecuperarContaUsuario.aRnRecuperarContaUsuario;
	}
	
	public String executar(Usuario pUsuario, HttpSession pSession, HttpServletRequest pRequest){
		String linkNovaSenha = this.gerarLink(pRequest); 
		
		
		Usuario usuario = RnConsultarUsuarioPorObjeto.getInstance().executar(pUsuario);
		
		if(usuario != null && usuario.getEmail().equals(pUsuario.getEmail())){
			this.enviarEmail(pUsuario.getEmail(), linkNovaSenha);
			
		}
		
		return null;
	}
	
	//TODO implemetação do Rodrigo Mafra - Enviar Email.
	private void enviarEmail(String pEmail, String plink){
		//Envia um email para o usuário com o Link de alteração de senha.
		
	}
	
	//TODO Ainda falta ser finalizado.
	private String gerarLink(HttpServletRequest pRequest){
		String uri = pRequest.getRequestURI();
		String novaSenha = BibliotecaFuncao.criptografarPalavra("novaSenha");
		
		String novo = uri.replace(Constantes.LINK_EFETUAR_RECUPERACAO_CONTA, novaSenha);
		
		return novo;
		
	}

}
