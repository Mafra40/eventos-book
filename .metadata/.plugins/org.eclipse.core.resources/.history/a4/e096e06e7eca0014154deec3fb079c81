package br.com.eventosbook.dao.impl;

import java.util.List;

import br.com.eventosbook.dao.DaoTipoUsuario;
import br.com.eventosbook.hibernate.util.ConnectionFactory;
import br.com.eventosbook.modelo.TipoUsuario;

public class DaoTipoUsuarioImpl implements DaoTipoUsuario{
	
	private DaoTipoUsuarioImpl() {}
	private static DaoTipoUsuarioImpl aDAOTipoUsuario = new DaoTipoUsuarioImpl();

	public static DaoTipoUsuarioImpl getInstance(){
		if(DaoTipoUsuarioImpl.aDAOTipoUsuario == null){
			DaoTipoUsuarioImpl.aDAOTipoUsuario = new DaoTipoUsuarioImpl();
		}
		
		return DaoTipoUsuarioImpl.aDAOTipoUsuario;
	}
	


	@Override
	public void incluir(TipoUsuario pTipoUsuario) {

		try{
			ConnectionFactory.getInstace().getConnection().getTransaction().begin();
			ConnectionFactory.getInstace().getConnection().persist(pTipoUsuario);
			ConnectionFactory.getInstace().getConnection().getTransaction().commit();
		}catch(Exception e){
			e.printStackTrace();
			System.out.println(e.getMessage());
			ConnectionFactory.getInstace().getConnection().getTransaction().rollback();
			
		} finally{
			ConnectionFactory.getInstace().getCloseConnection();

		}

		
		
	}

	@Override
	public void alterar(TipoUsuario pTipoUsuario) {
		try{
			ConnectionFactory.getInstace().getConnection().getTransaction().begin();
			ConnectionFactory.getInstace().getConnection().merge(pTipoUsuario);
			ConnectionFactory.getInstace().getConnection().getTransaction().commit();
		}catch(Exception e){
			e.printStackTrace();
			System.out.println(e.getMessage());
			ConnectionFactory.getInstace().getConnection().getTransaction().rollback();
			
		} finally{
			ConnectionFactory.getInstace().getCloseConnection();

		}

		
	}

	@Override
	public void excluir(TipoUsuario pTipoUsuario) {
		try{
			ConnectionFactory.getInstace().getConnection().getTransaction().begin();
			ConnectionFactory.getInstace().getConnection().remove(pTipoUsuario);
			ConnectionFactory.getInstace().getConnection().getTransaction().commit();
		}catch(Exception e){
			e.printStackTrace();
			System.out.println(e.getMessage());
			ConnectionFactory.getInstace().getConnection().getTransaction().rollback();
			
		} finally{
			ConnectionFactory.getInstace().getCloseConnection();

		}

		
	}

	@Override
	public List<TipoUsuario> consultar() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public TipoUsuario getTipoUsuario(TipoUsuario pTipoUsuario) {
		// TODO Auto-generated method stub
		return null;
	}

}
